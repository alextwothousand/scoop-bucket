{
	"version": "20080300",
	"url": "https://github.com/yuk7/ArchWSL2/releases/download/20080300/ArchWSL2.zip",
	"hash": "bd55faa53f367bd186204db64eb1fe9f45fc793c325a06a2c688071bc95ab1ad",
	"bin": "Arch2.exe",
	"notes": "ArchWSL2 successfully installed. Goodbye, and take care!",
    "shortcuts": [
        [
            "Arch2.exe",
            "Arch Linux"
        ]
    ],
    "persist": "data",
    "checkver": "github",
    "autoupdate": {
        "url": "https://github.com/yuk7/ArchWSL2/releases/download/$version/ArchWSL2.zip"
    },
    "post_install": [
        "$installable = $true",
        "$user = [Security.Principal.WindowsIdentity]::GetCurrent() -as [Security.Principal.WindowsPrincipal]",
        "$permission = Get-Acl $persist_dir | Select-Object -ExpandProperty Access | Where-Object {",
        "    ($user.IsInRole($_.IdentityReference)) -and `",
        "    ($_.FileSystemRights.ToString() -eq 'FullControl') -and `",
        "    ($_.InheritanceFlags -band 3) -and `",
        "    ($_.PropagationFlags.ToString() -ne 'NoPropagateInherit')",
        "}",
        "if ($null -eq $permission) {",
        "   warn 'Full Control access to the scoop directory is necessary to install WSL distribution.'",
        "   warn 'Change directory security and reinstall ArchWSL.'",
        "   $installable = $false",
        "}",
        "if ($null -eq (Get-Command 'wslconfig' -ErrorAction SilentlyContinue)) {",
        "    warn 'WSL appears not to be enabled!'",
        "    warn 'Run ''Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux'''",
        "    warn 'from an elevated PowerShell. Restart your computer when prompted and reinstall ArchWSL.'",
        "    $installable = $false",
        "}",
        "if ($installable) {",
        "    Copy-Item \"$dir\\Arch2.exe\" \"$persist_dir\\data\\Arch2.exe\"",
        "    $res = Invoke-ExternalCommand \"$persist_dir\\data\\Arch2.exe\" 'install', \"$dir\\rootfs.tar.gz\"",
        "    Remove-Item \"$persist_dir\\data\\Arch2.exe\" -Force",
        "    if(!$res) { error 'ArchWsl installation failed!'; return }",
        "}"
    ],
    "uninstaller": {
        "script": [
            "$res = Invoke-ExternalCommand \"$dir\\Arch2.exe\" 'isregd'",
            "if(!$res) { error 'ArchWsl is not registered!'; return }",
            "Invoke-ExternalCommand \"$dir\\Arch2.exe\" 'clean', '-y' | Out-Null"
        ]
    }
}
